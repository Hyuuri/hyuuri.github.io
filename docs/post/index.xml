<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on in-my-space</title>
    <link>https://hyuuri.github.io/post/</link>
    <description>Recent content in Posts on in-my-space</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>jp</language>
    <lastBuildDate>Mon, 13 Jun 2022 16:49:17 +0900</lastBuildDate><atom:link href="https://hyuuri.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Flct Make</title>
      <link>https://hyuuri.github.io/post/2022/06/13/flct-make/</link>
      <pubDate>Mon, 13 Jun 2022 16:49:17 +0900</pubDate>
      
      <guid>https://hyuuri.github.io/post/2022/06/13/flct-make/</guid>
      <description>File Count commandをとりあえず作る 今いるディレクトリのファイルの数をカウントしたい時がある。
調べても既存コマンドの組み合わせしか出てこなくてウザい、いちいちオプションとか覚えてないので。
とりあえずこれ打てばファイル数がわかるCLIのツールを作ってみた。
#!/bin/sh while getopts r OPT; do case $OPT in r ) FLG_R=true ;; esac done if [ &amp;#34;${FLG\_R}&amp;#34; ]; then find . -type f|wc -l else ls -U1 | wc -l fi 動作としてはオプション指定ナシでカレントディレクトリのファイル数を表示（サブディレクトリ内のファイル数はカウントしない)
-r オプションでサブディレクトリ内のファイル数まで再帰的に探索して表示する感じ
これだけでとりあえずは動くので良しとする。
あとは適当にパーミッションを777で設定して、.bashrcとか.bash_profileとかにPATH通せばよろし。</description>
    </item>
    
    <item>
      <title>Earth Mover&#39;s Distanceを二次元平面に適用するやつをPytorchで実装した</title>
      <link>https://hyuuri.github.io/post/2022/05/28/earth-movers-distance%E3%82%92%E4%BA%8C%E6%AC%A1%E5%85%83%E5%B9%B3%E9%9D%A2%E3%81%AB%E9%81%A9%E7%94%A8%E3%81%99%E3%82%8B%E3%82%84%E3%81%A4%E3%82%92pytorch%E3%81%A7%E5%AE%9F%E8%A3%85%E3%81%97%E3%81%9F/</link>
      <pubDate>Sat, 28 May 2022 15:50:46 +0900</pubDate>
      
      <guid>https://hyuuri.github.io/post/2022/05/28/earth-movers-distance%E3%82%92%E4%BA%8C%E6%AC%A1%E5%85%83%E5%B9%B3%E9%9D%A2%E3%81%AB%E9%81%A9%E7%94%A8%E3%81%99%E3%82%8B%E3%82%84%E3%81%A4%E3%82%92pytorch%E3%81%A7%E5%AE%9F%E8%A3%85%E3%81%97%E3%81%9F/</guid>
      <description>EMDについて Earth Mover&amp;rsquo;s Distance(EMD)は分布間の距離を表す指標の一つです。
KL距離などと似ていますが、EMDは重み、という概念を用いる部分が肝ですね。重みと距離を表すものですので、MLの分野におけるLossとして用いることができそうですね。
例えば、GANでは積極的に用いられており、W-GANでは連続値版のEMDである、Wassernstein Lossという名前で用いられています。
なぜ今回これを作ったか 研究で尤度マップをモデルに生成させており、その学習に用いてみようと思い立ったためです。
単純に考えれば、正解ラベルの尤度マップとのMSELoss(二乗誤差損失)でも問題ないようにも思いますが、肝心の尤度の分布のズレ等は反映されない問題があります。
実装 結構単純です
def EMDLoss(self,y_pred, y_true): 	integral_y_true = torch.cumsum(torch.cumsum(y_true, dim=3), dim=2) 	integral_y_pred = torch.cumsum(torch.cumsum(y_pred, dim=3), dim=2) 	square = torch.square(integral_y_true - integral_y_pred) 	square_sum = torch.sum(torch.sum(square, dim=3), dim=2) 	mean = torch.div(square_sum, len(y_pred[0][0])**2) 	distance = torch.mean(mean) 	return distance 二次元行列の積分画像的なものを作成し、その差分を取り、二乗和を取ります。あとはそのBatchの平均を取ってLossとします。 (間違いがあれば教えて下さい。)
現状 計算量はGPU上で行ってもそこそこ重めです。速度の計測はしていませんがそこそこ遅いので我慢してください。 ただし、結構分布としては近づくように学習は進んでいるので意図通りのものはできたのかなと思います。
*追記 学習そのものは進みますが、最適化問題を無理やり微分可能なものに落とし込んでいるために、学習結果自体は芳しいものにはなりませんでした。
尤度マップがギザギザになってしまったり、曖昧な表現が難しくなってしまいました。うまく活かせるタスクとそうでないタスクを選びそうです。
素直に実績のあるWassersteinLossを参考にしたほうが良い気がしました。
指摘をしてくれた同期のhppには感謝を捧げます。
参考文献 https://discuss.pytorch.org/t/implementation-of-squared-earth-movers-distance-loss-function-for-ordinal-scale/107927</description>
    </item>
    
    <item>
      <title>WSL2 Udevrule</title>
      <link>https://hyuuri.github.io/post/2022/05/12/wsl2-udevrule/</link>
      <pubDate>Thu, 12 May 2022 13:29:11 +0900</pubDate>
      
      <guid>https://hyuuri.github.io/post/2022/05/12/wsl2-udevrule/</guid>
      <description></description>
    </item>
    
    <item>
      <title>感想抜きでの就活の結果まとめ</title>
      <link>https://hyuuri.github.io/post/2022/04/25/%E6%84%9F%E6%83%B3%E6%8A%9C%E3%81%8D%E3%81%A7%E3%81%AE%E5%B0%B1%E6%B4%BB%E3%81%AE%E7%B5%90%E6%9E%9C%E3%81%BE%E3%81%A8%E3%82%81/</link>
      <pubDate>Mon, 25 Apr 2022 18:35:00 +0900</pubDate>
      
      <guid>https://hyuuri.github.io/post/2022/04/25/%E6%84%9F%E6%83%B3%E6%8A%9C%E3%81%8D%E3%81%A7%E3%81%AE%E5%B0%B1%E6%B4%BB%E3%81%AE%E7%B5%90%E6%9E%9C%E3%81%BE%E3%81%A8%E3%82%81/</guid>
      <description>選考の結果  内々定：3社 一次選考落ち：1社 書類落ち：1社  内定したところの内訳  カメラメーカー 大手システムベンダ 大手電機メーカー ← ここ行きます  内定落ちしたところの内訳  それを一緒に可能にするカメラメーカー イノベーションから価値を作っちゃう系のカメラメーカー  落ちた理由  SPIがシンプルにゴミだった 初手に人間性で弾かれた（陰キャ過ぎた）  内々定をもらったところからのコメント  自分の言葉で話すところが良い 前向きに仕事に取り組んで行く姿勢を評価した ← どこに？！ 話し方がロジカルだった  一言 面接して人間性ではじかれている以上ただ普通に人事の人のお気持ちで通るか通らないかが決まっているんだなぁと思いました。</description>
    </item>
    
    <item>
      <title>しうかつが終わった話＋ポエム</title>
      <link>https://hyuuri.github.io/post/2022/04/24/%E3%81%97%E3%81%86%E3%81%8B%E3%81%A4%E3%81%8C%E7%B5%82%E3%82%8F%E3%81%A3%E3%81%9F%E8%A9%B1%E3%83%9D%E3%82%A8%E3%83%A0/</link>
      <pubDate>Sun, 24 Apr 2022 14:52:51 +0900</pubDate>
      
      <guid>https://hyuuri.github.io/post/2022/04/24/%E3%81%97%E3%81%86%E3%81%8B%E3%81%A4%E3%81%8C%E7%B5%82%E3%82%8F%E3%81%A3%E3%81%9F%E8%A9%B1%E3%83%9D%E3%82%A8%E3%83%A0/</guid>
      <description>しうかつが終わった話 結論 いい感じの大企業に内々定をもらって就活終わりです。そこで（おそらく）ソフトウェアエンジニアとして働く予定です。
しうかつで思ったこと 陰キャ理系大学院生で、特に素晴らしい業績やモチベーションをもって取り組んでいることがない僕の感想は、就活は企業との価値観のマッチングゲーということです。 ですが、前提として能力ゲーなのはそうです。一定以上の学歴（学力）、平均以上のスキルがあれば倍率が高い企業でも選考突破は難しくないと思います。 企業は優秀かつ人間的に問題がない人が欲しくて、手を凝らして人を集めているので、IT系で言えばKaggleとかAtcoderとかで強い人は引くて数多です。 結構ESとかでこういった実績を要求する会社が多かったです。ここら辺がある人は過度に人間的に瑕疵がなく、そこそこの人当たりの良さがあれば既存の就活及びそれ以外のジョブハンティングのやり方で大手、それ以上のIT会社に入れますし、高収入が期待できると思います。 そうでない人は、おそらく研究の紹介をして、普通の面接から判断されるわけです。 となると、自然とみられるのは価値観が会社とマッチングするか？ということだと思います。つまり、自己分析と企業研究がモノをいうという形の所謂”就活”ルートになるわけですね。 世の中の大体は一定ラインを超えれば、能力というより、持っている価値観と人間性を求められているんだなと実感しました。 就職を通じて、私にはその程度の矮小な能力しか持っていなんだなということを突き付けられたわけです。
グダグダ述べましたが、結論能力があれば、既存の枠組みにとらわれないジョブハンティングが可能で、そうじゃない人々は普通の就活を地道に行うべきであるという話でした。
最後に あえて言おう。”就活”は極めてカスな営みであると！
自分のカスさを第一に感じる上に、日本の行く末のカスさを感じざるを得ませんし、世の中はカスみたいな差異しか生み出さない仕事であふれていることに絶望します。 その点において、僕は博士過程に進み、自由に革新的な研究をしてみたいと考えていた時期もありました。 ですが、結局は一緒です。 凡人にできるのは地道な努力ぐらいのモノで、できる仕事、研究は些細な差異を生み出すことくらいだと気付きました。 社会に絶望しつつも、できるのは微かな悪あがきという事実に打ちひしがれて、この一か月は少し精神的に参っていました。 その中で、ある小説の一説を思い出しました。
「それでもただ生きていくほかないんだ。」
どうやっても、考えながらただ生きていく他にできることはないという事実に気が付きました。 少し元気が出ました。苦しくてもただ考えて残りの人生をただ生きていくという行為にある種の慰めを感じたからです。
以上、謎ポエムでした。</description>
    </item>
    
    <item>
      <title>Hugoでサイトを作るなどした</title>
      <link>https://hyuuri.github.io/post/2022/04/21/hugo%E3%81%A7%E3%82%B5%E3%82%A4%E3%83%88%E3%82%92%E4%BD%9C%E3%82%8B%E3%81%AA%E3%81%A9%E3%81%97%E3%81%9F/</link>
      <pubDate>Thu, 21 Apr 2022 22:15:57 +0900</pubDate>
      
      <guid>https://hyuuri.github.io/post/2022/04/21/hugo%E3%81%A7%E3%82%B5%E3%82%A4%E3%83%88%E3%82%92%E4%BD%9C%E3%82%8B%E3%81%AA%E3%81%A9%E3%81%97%E3%81%9F/</guid>
      <description>Hugoでサイトを作るなどした 研究室の先生に自分でサイトくらい持っておかないといけないよ、的なことを言われたのでもそもそと作ってみました。 Webに強い友人に聴いたところGatsubyは最近はそこまで流行っておらず、HugoがGoで作られておりなかなかに良いとおすすめされたのでこれにしました。 実際HTMLとかCSSとかをがりがり書かなくても、なかなかに良いテンプレートが合って適当にMDで書けばいい感じにしてくれるので満足してます。
作るまでにあった色々のトラブルシューティングなど 画像が表示されない 原因、変な名前で画像を保存してた。（_.pngだった&amp;hellip;)
themesが適用されない いまいち原因不明 おそらくhugoでビルドしていたことが原因</description>
    </item>
    
  </channel>
</rss>
